CREATE OR REPLACE VIEW ORDER_LIFECYCLE_MAP 
(
	OPP_DOC_NBR										COMMENT 'OPPORTUNITY DOCUMENT NUMBER (IF APPLIES TO A SALES ORDER)'
	,ESTIMATE_DOC_NBR								COMMENT 'ESTIMATE/QUOTE DOCUMENT NUMBER (IF APPLIES TO A SALES ORDER)'
	,SALES_ORDER_DOC_NBR							COMMENT 'SALES ORDER DOCUMENT NUMBER'
	,INVOICE_DOC_NBR								COMMENT 'INVOICE DOCUMENT NUMBER'
	,OPP_CREATED_DATE								COMMENT 'OPPORTUNITY CREATED DATE'
	,ESTIMATE_CREATED_DATE							COMMENT 'ESTIMATE/QUOTE CREATED DATE'
	,SALES_ORDER_CREATED_DATE						COMMENT 'SALES ORDER CREATED DATE'
	,SALES_ORDER_APPROVAL_DATE						COMMENT 'SALES ORDER APPROVAL DATE'
	,INVOICE_CREATED_DATE							COMMENT 'INVOICE CREATED DATE'
	,INVOICE_PENDING_BILLING_DATE					COMMENT 'INVOICE PENDING BILLING DATE'
	,INVOICE_PENDING_FULFILLMENT_DATE				COMMENT 'INVOICE PENDING FULFILLMENT DATE'
	,INVOICE_CLOSED_DATE							COMMENT 'INVOICE CLOSED DATE'
)
COMMENT = 'LAITH BARAKAT | THIS VIEW COMPILES LINKED TRANSACTIONS THROUGHOUT THE ORDER LIFECYCLE WITHIN NETSUITE. NOT EVERY SALES ORDER HAS AN OPPORTUNITY AND/OR ESTIMATE, BUT EVERY SALES ORDER HAS AT LEAST ONE INVOICE. IF A SALES ORDER HAS MORE THAN ONE INVOICE, THE SALES ORDER WILL HAVE AS MANY ROWS AS THERE ARE INVOICES IN THIS VIEW. THIS VIEW CAN BE LINKED TO OTHER NETSUITE VIEWS (BOOKINGS_BILLINGS, OPPORTUNITIES, GENERAL LEDGER) FOR FULL EFFECT IN UNDERSTANDING TRANSACTIONS.'

AS

WITH

OPP_TO_EST_MAP AS
(
SELECT DISTINCT
    opps.TRANSACTION_ID AS OPPS_TRAN_ID,
    opps.TRANID AS OPP_DOC_NBR, 
    ests.TRANID AS ESTIMATE_DOC_NBR,
    ests.TRANSACTION_ID AS ESTIMATE_TRAN_ID,
    opps.CREATE_DATE AS OPP_CREATED_DATE  
FROM "VW_TRANSACTIONS" opps
    LEFT JOIN "VW_TRANSACTION_LINKS" opps_to_ests 
    ON opps.TRANSACTION_ID = opps_to_ests.ORIGINAL_TRANSACTION_ID
    LEFT JOIN "VW_TRANSACTIONS" ests 
    ON opps_to_ests.APPLIED_TRANSACTION_ID = ests.TRANSACTION_ID 
WHERE 
    UPPER(opps.TRANSACTION_TYPE) = 'OPPORTUNITY' 
    AND UPPER(ests.TRANSACTION_TYPE) = 'ESTIMATE'
),

--estimate to sales order map
EST_TO_SO_MAP AS
(
SELECT DISTINCT
    ests.TRANSACTION_ID AS ESTIMATE_TRAN_ID,
    ests.TRANID AS ESTIMATE_DOC_NBR, 
    ords.TRANID AS ORDS_DOC_NBR,
    ords.TRANSACTION_ID AS ORDER_TRAN_ID,
    ests.CREATE_DATE AS ESTIMATE_CREATED_DATE 
FROM "VW_TRANSACTIONS" ests
    LEFT JOIN "VW_TRANSACTION_LINKS" ests_to_ords 
        ON ests.TRANSACTION_ID = ests_to_ords.ORIGINAL_TRANSACTION_ID
    LEFT JOIN "VW_TRANSACTIONS" ords 
        ON ests_to_ords.APPLIED_TRANSACTION_ID = ords.TRANSACTION_ID 
WHERE 
    UPPER(ests.TRANSACTION_TYPE) = 'ESTIMATE' 
    AND UPPER(ords.TRANSACTION_TYPE) = 'SALES ORDER'
),

--order to invoice map
SO_TO_INV_MAP AS
(
SELECT DISTINCT
    ords.TRANSACTION_ID AS ORDER_TRAN_ID,
    ords.TRANID AS SALES_ORDER_DOC_NBR, 
    invs.TRANID AS INVOICE_DOC_NBR,
    invs.TRANSACTION_ID AS INVOICE_TRAN_ID,
    ords.CREATE_DATE AS SALES_ORDER_CREATED_DATE,
    ords.RS_SO_APPROVAL_DATE AS SALES_ORDER_APPROVAL_DATE,
    invs.CREATE_DATE AS INVOICE_CREATED_DATE,
    invs.RS_PENDING_BILLING_DATE AS INVOICE_PENDING_BILLING_DATE,
    invs.RS_PENDING_FULFILLMENT AS INVOICE_PENDING_FULFILLMENT_DATE,
    invs.CLOSED AS INVOICE_CLOSED_DATE
FROM "VW_TRANSACTIONS" ords
    LEFT JOIN "VW_TRANSACTION_LINKS" ords_to_invs 
        ON ords.TRANSACTION_ID = ords_to_invs.ORIGINAL_TRANSACTION_ID
    LEFT JOIN "VW_TRANSACTIONS" invs 
        ON ords_to_invs.APPLIED_TRANSACTION_ID = invs.TRANSACTION_ID 
WHERE 
    UPPER(ords.TRANSACTION_TYPE) = 'SALES ORDER' 
    AND UPPER(invs.TRANSACTION_TYPE) = 'INVOICE'
),

COMBINED_QUERY AS
(
SELECT 
     OPP_TO_EST_MAP.OPP_DOC_NBR
    ,EST_TO_SO_MAP.ESTIMATE_DOC_NBR
    ,SO_TO_INV_MAP.SALES_ORDER_DOC_NBR
    ,SO_TO_INV_MAP.INVOICE_DOC_NBR
    ,OPP_TO_EST_MAP.OPP_CREATED_DATE
    ,EST_TO_SO_MAP.ESTIMATE_CREATED_DATE
    ,SO_TO_INV_MAP.SALES_ORDER_CREATED_DATE
    ,SO_TO_INV_MAP.SALES_ORDER_APPROVAL_DATE
    ,SO_TO_INV_MAP.INVOICE_CREATED_DATE
    ,SO_TO_INV_MAP.INVOICE_PENDING_BILLING_DATE
    ,SO_TO_INV_MAP.INVOICE_PENDING_FULFILLMENT_DATE
    ,SO_TO_INV_MAP.INVOICE_CLOSED_DATE
FROM 
    OPP_TO_EST_MAP
    FULL OUTER JOIN
    EST_TO_SO_MAP
        ON OPP_TO_EST_MAP.ESTIMATE_TRAN_ID = EST_TO_SO_MAP.ESTIMATE_TRAN_ID
    FULL OUTER JOIN
    SO_TO_INV_MAP
         ON SO_TO_INV_MAP.ORDER_TRAN_ID = EST_TO_SO_MAP.ORDER_TRAN_ID
)

SELECT * FROM COMBINED_QUERY
;
